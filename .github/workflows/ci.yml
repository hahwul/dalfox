---
name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths: ["**/*.rs", Cargo.toml, Dockerfile]
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: Build & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v5
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install latest stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./lcov.info
          verbose: true
          fail_ci_if_error: true
